{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SA2CeA,EAXH,WAIV,OACE,8BACE,4CC1BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3f3b6c8.chunk.js","sourcesContent":["import logo from './images/logo.png';\nimport './App.css';\nimport { Button, Nav, Navbar, CardColumns, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport ProductosJSON from './json/productos.json';\nimport { ScrollingProvider, useScrollSection, Section, useScrollSections } from 'react-scroll-section';\n\nconst DynamicMenu = () => {\n  const sections = useScrollSections();\n    return (\n      <>\n      <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n      <Navbar.Brand>\n        <img\n          src={logo}\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n          alt=\"Toshiro Sushi\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {sections.map(({ id, onClick, selected }) => (\n            <Nav.Link href={\"#\" + id} key={id} onClick={onClick} selected={selected}>{id}</Nav.Link>\n          ))}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n      </>\n    );\n};\n\nconst App = () => {\n  function formatPrecio(num) {\n    return '$' + num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.')\n  }\n  return (\n    <div>\n      <p>HOLAAAAA</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}